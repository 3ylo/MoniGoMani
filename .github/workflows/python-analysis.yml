name: "pylint"

on:
  push:
    branches: [ master, development, feature/* ]
  pull_request:
    branches: [ master, development ]
  schedule:
    - cron: '17 11 * * 4'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 mgm-hurry --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 mgm-hurry --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest --doctest-modules --junitxml=tests/junit/test-results-${{ matrix.python-version }}.xml --cov=. --cov-report=xml --cov-report=html
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: tests/junit/test-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          artifact: /test-results-(.*)/
          name: 'Test Report $1'
          path: tests/junit/test-results-*.xml
          reporter: java-junit
